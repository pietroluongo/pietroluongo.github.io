import{P as e,p as t}from"./vendor.fba35f71.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(s){const i=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((s,r)=>{const h=new URL(e,i);if(self[t].moduleMap[h])return s(self[t].moduleMap[h]);const n=new Blob([`import * as m from '${h}';`,`${t}.moduleMap['${h}']=m;`],{type:"text/javascript"}),l=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(n),onerror(){r(new Error(`Failed to import: ${e}`)),a(l)},onload(){s(self[t].moduleMap[h]),a(l)}});document.head.appendChild(l)})),self[t].moduleMap={}}}("/assets/");var s,i,a={type:e.AUTO,parent:"game",backgroundColor:"#000",scale:{width:1600,height:1200,mode:e.Scale.FIT,autoCenter:e.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{}}};class r extends Phaser.GameObjects.GameObject{constructor(e,t,s,i,a,r){super(t,e),this.applyDamage=e=>{this.health-=e,this.health<=0&&(this.health=0,this.die(),this.isAlive=!1)},this.die=()=>{},[this.x,this.y]=[s,i],this.scene=t;const{width:h,height:n}=this.scene.sys.game.canvas;this.screenHeight=n,this.screenWidth=h,this.tail=t.add.sprite(s,i,""),this.sprite=t.physics.add.sprite(s,i,""),this.initSprite(a[0],.5),this.isMoving=!1}initTail(e,t){this.tail.setTexture(e),this.tail.setScale(t),this.updateTailPosition()}updateTailPosition(){const[e,t]=[this.sprite.displayWidth,this.sprite.displayHeight/2],s=this.tail.displayHeight;this.tail.setX(this.sprite.x-e),this.tail.setY(this.sprite.y+t-s/1.5)}initSprite(e,t){this.sprite.setTexture(e),this.sprite.setScale(t),this.sprite.setDepth(1)}delay(e){return new Promise((t=>setTimeout(t,e)))}update(){this.renderTail()}async setMovement(e){this.isMoving=!0,this.scene.input.keyboard.on(e,(()=>{this.delay(240),this.isMoving=!1}))}moveSprite(e,t){this.outsideScreenArea(this.x+e,this.y+t)||(this.x+=e,this.y+=t)}outsideScreenArea(e,t){const{width:s,height:i}=this.scene.sys.game.canvas,a=this.sprite.displayWidth/2,r=this.sprite.displayHeight/2;return e<=a||e>=s-a||t<=r||t>=i-r}renderTail(){this.isMoving?this.tail.alpha=1:this.tail.alpha=0,this.updateTailPosition()}setAcceleration(e,t){}}(i=s||(s={}))[i.enemy=0]="enemy",i[i.player=1]="player";class h extends Phaser.GameObjects.GameObject{constructor(e,t,s,i,a,r=0,h=100,n=1){super(e,t),this.scene=e,this.coords={x:i,y:a,angle:r},this.sprite=e.physics.add.sprite(i,a,t),this.origin=s,this.scene.registerProjectile(this),this.sprite.enableBody(!0,i,a,!0,!0),this.sprite.setScale(n),this.scene.physics.velocityFromAngle(r,h,this.sprite.body.velocity)}update(){}destroy(){this.sprite.destroy(),super.destroy()}}var n,l;(l=n||(n={}))[l.totalHealth=0]="totalHealth",l[l.fireSpeed=1]="fireSpeed",l[l.moveSpeed=2]="moveSpeed",l[l.dropChance=3]="dropChance",l[l.bulletSize=4]="bulletSize",l[l.bulletSpeed=5]="bulletSpeed",l[l.bulletDamage=6]="bulletDamage",l[l.bulletPenetration=7]="bulletPenetration";const c=[{title:"Vida total",description:"Aumenta a sua vida total",icon:"test1",id:0,enabled:!0},{title:"Velocidade de disparo",description:"Reduz o intervalo entre disparos",icon:"test2",id:1,enabled:!1},{title:"Velocidade de movimento",description:"Aumenta a velocidade de movimento",icon:"test3",id:2,enabled:!0},{title:"Chance de Drop",description:"Aumenta a chance de um inimigo deixar um item",icon:"test4",id:3,enabled:!1},{title:"Tamanho do Cookie",description:"Aumenta o tamanho dos seus disparos",icon:"test5",id:4,enabled:!1},{title:"Velocidade do Cookie",description:"Aumenta a velocidade dos seus disparos",icon:"test6",id:5,enabled:!1},{title:"Dano do Cookie",description:"Aumenta o dano dos seus disparos",icon:"test7",id:6,enabled:!1},{title:"Penetração do Cookie",description:"Aumenta quantos inimigos um único cookie seu pode acertar",icon:"test8",id:7,enabled:!1}];class d extends r{constructor(e,t,i,a){super("player",e,t,i,["flyingtoast"],["rainbowtail","rainbowtailalternate"]),this.standardUpgrades={totalHealth:{currentLevel:1,maxLevel:5,values:[100,125,150,175,200],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:this.handleTotalHealthIncrease,isEnabled:!0},fireSpeed:{currentLevel:1,maxLevel:5,values:[.8,.6,.4,.2,0],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:()=>{},isEnabled:!1},moveSpeed:{currentLevel:1,maxLevel:5,values:[200,400,600,800,1e3],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:this.handleMoveSpeedIncrease,isEnabled:!0},dropChance:{currentLevel:1,maxLevel:5,values:[.01,.02,.04,.08,.1],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:()=>{},isEnabled:!1},bulletSize:{currentLevel:1,maxLevel:5,values:[2,3,4,4.5,5],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:this.handleBulletSizeIncrease,isEnabled:!0},bulletDamage:{currentLevel:1,maxLevel:5,values:[100,200,400,800,1e3],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:this.handleBulletDamageIncrease,isEnabled:!0},bulletSpeed:{currentLevel:1,maxLevel:5,values:[500,800,1e3,2500,5e3],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:this.handleBulletSpeedIncrease,isEnabled:!0},bulletPenetration:{currentLevel:1,maxLevel:5,values:[0,2,4,8,10],prices:[1e4,1e4,1e4,1e4,1e4],handleIncrease:()=>{},isEnabled:!1}},this.handleMovementKeys=()=>{this.keyboard.on("keydown-A",(()=>{this.sprite.setAccelerationX(-2e3)})),this.keyboard.on("keydown-D",(()=>{this.sprite.setAccelerationX(2e3)})),this.keyboard.on("keydown-S",(()=>{this.sprite.setAccelerationY(2e3)})),this.keyboard.on("keydown-W",(()=>{this.sprite.setAccelerationY(-2e3)})),this.keyboard.on("keyup-A",(()=>{this.sprite.setAccelerationX(0)})),this.keyboard.on("keyup-D",(()=>{this.sprite.setAccelerationX(0)})),this.keyboard.on("keyup-S",(()=>{this.sprite.setAccelerationY(0)})),this.keyboard.on("keyup-W",(()=>{this.sprite.setAccelerationY(0)})),this.keyboard.on("keydown-SPACE",(()=>{if(this.canBrake){this.canBrake=!1;const e=this.sprite.body.velocity;this.sprite.setVelocity(.9*e.x,.9*e.y)}setTimeout((()=>{this.canBrake=!0}),50)})),this.sprite.setDrag(500,500)},this.addScore=e=>{this.isAlive&&(this.score+=e)},this.lockMovement=()=>{this.sprite.setVelocity(0,0),this.sprite.setAcceleration(0,0)},this.handleShooting=()=>{this.canShoot&&(this.scene.input.on("pointerup",(()=>{this.hasFiredSinceLastClick=!1})),this.scene.input.once("pointerdown",(()=>{this.hasFiredSinceLastClick||(this.hasFiredSinceLastClick=!0,new h(this.scene,"powercookie",s.player,this.sprite.x,this.sprite.y,this.sprite.angle,this.upgrades.bulletSpeed.values[this.upgrades.bulletSpeed.currentLevel-1],this.upgrades.bulletSize.values[this.upgrades.bulletSize.currentLevel-1]))})))},this.handlePointer=()=>{const e=this.scene.input.activePointer,t=Phaser.Math.RAD_TO_DEG*Phaser.Math.Angle.Between(this.screenWidth/2,this.screenHeight/2,e.x,e.y);this.sprite.setAngle(t)},this.handleCameraZoom=()=>{const e=this.scene.cameras.main,t=Math.abs(this.sprite.body.velocity.length());t<10?setTimeout((()=>{t<10&&e.zoomTo(b,1e3,Phaser.Math.Easing.Quadratic.In)}),1e3):e.zoomTo(1,250,Phaser.Math.Easing.Quadratic.Out)},this.heal=()=>{this.health&&(this.health+=25,this.health>=this.maxHealth&&(this.health=this.maxHealth))},this.die=()=>{this.sprite.setVelocity(0,0),this.sprite.setAcceleration(0,0),this.canMove=!1,this.isAlive=!1,this.canShoot=!1,this.scene.canRestart=!0},this.handlePlayerState=()=>{this.health<=0&&this.die()},this.canMove=!0,this.canShoot=!0,this.isAlive=!0,this.health=100,this.upgrades=this.standardUpgrades,this.maxHealth=this.upgrades.totalHealth.values[0],this.keyboard=a,this.sprite.setMaxVelocity(this.upgrades.moveSpeed.values[0]),this.hasFiredSinceLastClick=!1,this.canBrake=!0,this.sprite.body.setSize(100,100),this.score=0,this.upgrades.totalHealth.handleIncrease=this.handleTotalHealthIncrease}getCurrentDamageValues(){return this.upgrades.bulletDamage.values[this.upgrades.bulletDamage.currentLevel-1]}getUpgradeParamById(e){switch(e){case n.bulletDamage:return this.upgrades.bulletDamage;case n.bulletPenetration:return this.upgrades.bulletPenetration;case n.bulletSize:return this.upgrades.bulletSize;case n.bulletSpeed:return this.upgrades.bulletSpeed;case n.dropChance:return this.upgrades.dropChance;case n.fireSpeed:return this.upgrades.fireSpeed;case n.moveSpeed:return this.upgrades.moveSpeed;case n.totalHealth:return this.upgrades.totalHealth;default:return{currentLevel:-1,maxLevel:-1,values:[],prices:[],handleIncrease:()=>{},isEnabled:!1}}}handleTotalHealthIncrease(e){if(e.upgrades.totalHealth.currentLevel>=5)return;const t=e.upgrades.totalHealth.prices[e.upgrades.totalHealth.currentLevel-1];e.score<t||(e.score-=t,e.upgrades.totalHealth.currentLevel++,e.maxHealth=e.upgrades.totalHealth.values[e.upgrades.totalHealth.currentLevel-1],e.health=e.maxHealth)}handleMoveSpeedIncrease(e){if(e.upgrades.moveSpeed.currentLevel>=5)return;const t=e.upgrades.moveSpeed.prices[e.upgrades.moveSpeed.currentLevel-1];e.score<t||(e.score-=t,e.upgrades.moveSpeed.currentLevel++,e.sprite.setMaxVelocity(e.upgrades.moveSpeed.values[e.upgrades.moveSpeed.currentLevel-1]))}handleBulletSpeedIncrease(e){if(e.upgrades.bulletSpeed.currentLevel>=5)return;const t=e.upgrades.bulletSpeed.prices[e.upgrades.bulletSpeed.currentLevel-1];e.score<t||(e.score-=t,e.upgrades.bulletSpeed.currentLevel++)}handleBulletDamageIncrease(e){if(e.upgrades.bulletDamage.currentLevel>=5)return;const t=e.upgrades.bulletDamage.prices[e.upgrades.bulletDamage.currentLevel-1];e.score<t||(e.score-=t,e.upgrades.bulletDamage.currentLevel++)}handleBulletSizeIncrease(e){if(e.upgrades.bulletSize.currentLevel>=5)return;const t=e.upgrades.bulletSize.prices[e.upgrades.bulletSize.currentLevel-1];e.score<t||(e.score-=t,e.upgrades.bulletSize.currentLevel++)}update(){this.x=this.sprite.x,this.y=this.sprite.y,this.handlePlayerState(),this.canMove?(this.handleMovementKeys(),this.handlePointer()):this.lockMovement(),this.handleShooting(),this.handleCameraZoom(),super.update()}}class o extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i,a,r,h){super(e,i,a,""),this.buildTiles=()=>{let e,t;const s=this.spriteCount.x-1,i=this.spriteCount.y-1;for(e=0;e<this.spriteCount.x;e++)for(t=0;t<this.spriteCount.y;t++)0===e&&0===t?this.scene.add.sprite(this.x,this.y,this.sprites.corner):e===s&&t===i?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.corner).setAngle(180):0===e&&t===i?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.corner).setAngle(-90):e===s&&0===t?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.corner).setAngle(90):0===e&&0!==t?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.flat).setAngle(-90):0!==e&&0===t?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.flat):e===s&&t!==i?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.flat).setAngle(90):t===i?this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.flat).setAngle(180):this.scene.add.sprite(this.x+32*e,this.y+32*t,this.sprites.inside)},this.scene=e,this.sprites=s,[this.x,this.y]=[i,a],this.width=r<64?64:r,this.height=h<64?64:h;const n=[Math.ceil(this.width/32),Math.ceil(this.height/32)];this.spriteCount={x:0,y:0},[this.spriteCount.x,this.spriteCount.y]=n,this.buildTiles(),this.scene.physics.add.existing(this,!0),e.physics.add.collider(this,e.player.sprite),this.body.setSize(32*this.spriteCount.x,32*this.spriteCount.y),this.body.setOffset(0,0)}create(){}update(){}}const p=3.7795275591;class u extends Phaser.GameObjects.GameObject{constructor(e,t,s,i,a=1){super(e,"sprite"),this.scene=e,this.x=t,this.y=s,this.sprite=e.physics.add.sprite(t,s,i).setScale(a).enableBody(!0,t,s,!0,!0).setInteractive(),e.registerDroppable(this)}create(){}pickup(){}update(){}}class g extends u{constructor(e,t,s,i=1){super(e,t,s,"catnip",i),this.scene.tweens.add({targets:this.sprite,duration:5e3,alpha:0})}pickup(){var e;null==(e=this.scene)||e.player.heal(),this.sprite.destroy(),this.destroy()}update(){setTimeout((()=>{this.sprite.destroy(),this.destroy()}),5e3)}}class m extends r{constructor(e,t,i,a){var r;super("player",t,i,a,["catbase"],!1),this.die=()=>{this.isAlive=!1,this.sprite.disableBody(),this.sprite.setVelocity(0,0),this.sprite.setAcceleration(0,0),this.scene.tweens.add({targets:this.sprite,duration:1e3,alpha:0}),this.tryHealthpack(),setTimeout((()=>{this.sprite.destroy(),this.destroy()}),5e3),this.scene.player.addScore(100),this.scene.aliveEnemies--},this.handleMovement=()=>{var e=Phaser.Math.Angle.Between(this.x,this.y,this.player.x,this.player.y),t=Phaser.Math.Distance.Between(this.x,this.y,this.player.x,this.player.y),s=t>this.maxAcceleration?this.maxAcceleration:t;this.acceleration=s;var i=s*Math.cos(e),a=s*Math.sin(e);this.shootPlayer(t,e),this.sprite.setAcceleration(i,a)},this.handleCollision=()=>{this.die()},this.updateState=()=>{this.isAlive||(this.canMove=!1)},this.shootPlayer=(e,t)=>{if(this.updateCounter<this.counterLimitToShoot)this.updateCounter+=1;else if(e<this.minimumDistanceToShoot){const e=180*t/Math.PI;new h(this.scene,"powercookie",s.enemy,this.sprite.x,this.sprite.y,e,1e3),this.updateCounter=0}},this.player=e,this.maxAcceleration=1e3,this.sprite.setMaxVelocity(500),this.minimumDistanceToShoot=300,this.updateCounter=0,this.counterLimitToShoot=100,this.health=.2627*(r=t.round)**3+4.611*r**2+68.576*r+6.0967,this.canMove=!0,this.isAlive=!0,this.acceleration=0,this.sprite.body.setSize(75),this.sprite.setScale(.85)}update(){this.x=this.sprite.x,this.y=this.sprite.y,this.updateState(),this.canMove&&this.handleMovement(),super.update()}tryHealthpack(){Math.random()<.05&&(new g(this.scene,this.x,this.y,2),console.log("healthpack"))}}class y extends Phaser.GameObjects.GameObject{constructor(e,t,s,i,a){super(e,"area"),this.scene=e,[this.x,this.y]=[t,s],this.enemyCount=a,this.radius=i,this.enemies=[],this.player=this.scene.player,e.add.circle(this.x,this.y,this.radius,16711680,.1),this.respawn()}respawn(){[...Array(this.enemyCount)].map((()=>{const e=this.radius*Math.sqrt(Math.random()),t=2*Math.random()*3.1415,s=this.x+e*Math.cos(t),i=this.y+e*Math.sin(t),a=new m(this.player,this.scene,s,i);this.enemies.push(a),this.scene.registerEnemy(a)}))}update(){}}const b=1;class v extends e.Scene{constructor(e="assets/maps/catMap.svg"){super("GameScene"),this.renderTutorial=()=>{this.add.rectangle(-150,-150,300,200,0,1),this.add.text(-200,-200,"move with WASD"),this.add.text(-200,-150,"brake with SPACE"),this.add.text(-200,-100,"aim with MOUSE")},this.killEnemy=()=>{this.aliveEnemies--},this.registerEnemy=e=>{this.aliveEnemies++,this.enemies.push(e),e.sprite.setBounce(1,1),this.physics.add.collider(e.sprite,this.barriers)},this.registerDroppable=e=>{this.pickups.push(e),this.physics.add.overlap(this.player.sprite,e.sprite,(()=>{e.pickup()}))},this.registerProjectile=e=>{if(e.origin==s.enemy?this.physics.add.overlap(e.sprite,this.player.sprite,(()=>{this.player.applyDamage(2)})):this.enemies.map((t=>{this.physics.add.overlap(t.sprite,e.sprite,(()=>{t.applyDamage(this.player.getCurrentDamageValues())}))})),this.enemies.map((e=>{this.physics.add.collider(e.sprite,this.player.sprite,(()=>{e.isAlive&&this.player.applyDamage(5),this.player.isAlive&&e.applyDamage(100)}))})),this.physics.add.collider(e.sprite,this.barriers,(()=>e.destroy())),this.projectiles.length>=30){const e=this.projectiles.shift();e&&e.destroy()}this.projectiles.push(e)},this.projectiles=[],this.barriers=[],this.spawners=[],this.enemies=[],this.round=1,this.aliveEnemies=0,this.pickups=[],this.isPaused=!1,this.isUpgrading=!1,this.canRestart=!1,this.currentMap=e}preload(){this.load.image("background","assets/backgroundSpace.png"),this.load.text("mapData","/assets/maps/catMap.svg"),this.load.audio("nyanCat",["assets/sfx/nyanCat.ogg"]),this.load.image("catbase","assets/sprites/catbase.png"),this.load.image("catnip","assets/sprites/catnip.png"),this.load.image("flyingtoast","assets/sprites/flyingtoast.png"),this.load.image("rainbowtail","assets/sprites/rainbowtail.png"),this.load.image("rainbowtailalternate","assets/sprites/rainbowtailalternate.png"),this.load.image("powercookie","assets/sprites/powercookie.png"),this.load.image("cakeMid","assets/sprites/wall/Tile_02.png"),this.load.image("cakeLeft","assets/sprites/wall/Tile_01.png"),this.load.image("cakeCenter","assets/sprites/wall/Tile_12.png"),this.cameras.main.setBackgroundColor("#0C4179"),this.keyboard=this.input.keyboard}create(){this.backgroundMusic=this.sound.add("nyanCat"),this.barrierParentObject=new e.GameObjects.GameObject(this,"sprite");const s=this.add.image(5100,5100,"background").setOrigin(.5);s.setScale(2),s.setAlpha(.5),this.renderTutorial(),this.player=new d(this,5100,5100,this.keyboard);const i=(e=>{const s=t(e).children[0].children[2].children.map((e=>e.properties));s.filter((e=>e.id.startsWith("rect")));const i=s.filter((e=>e.id.startsWith("path")));return{blocks:s.map((e=>({x:e.x*p,y:e.y*p,width:e.width*p,height:e.height*p}))),spawners:i.map((e=>({x:e.cx*p,y:e.cy*p,r:e.r*p})))}})(this.cache.text.get("mapData"));i.blocks.map((e=>this.barriers.push(new o(this,"block",{corner:"cakeLeft",flat:"cakeMid",inside:"cakeCenter"},e.x,e.y,e.width,e.height)))),i.spawners.map((e=>this.spawners.push(new y(this,e.x,e.y,e.r,10)))),this.cameras.main.startFollow(this.player.sprite,!1,.05,.05),this.cameras.main.zoom=b,this.projectiles=[];const{width:a,height:r}=this.sys.game.canvas;this.cameras.add(a-400,0,400,400).setZoom(.1).setName("minimap").startFollow(this.player),this.playMusic()}stopMusic(){this.backgroundMusic.stop()}pauseMusic(){this.backgroundMusic.pause()}resumeMusic(){this.backgroundMusic.resume()}playMusic(){this.backgroundMusic.play()}update(){this.player.update(),this.enemies.forEach((e=>e.update())),this.spawners.forEach((e=>e.update())),this.pickups.map((e=>e.update())),0===this.aliveEnemies&&this.nextRound()}nextRound(){this.round+=1,this.enemies=[],this.respawnEnemies()}respawnEnemies(){this.spawners.forEach((e=>e.respawn()))}}class S{constructor(e){this.scene=e,this.areDebugStatsActive=!1,this.debugBg=this.scene.add.rectangle(0,0,500,300,0).setAlpha(0).setScrollFactor(0,0),this.debugText=this.scene.add.text(10,10,"",{fontFamily:'"Press Start P2"',fontSize:"16px"}).setAlpha(0).setScrollFactor(0,0);this.scene.input.keyboard.addKey("tab",!0).on("down",(()=>{})),this.debugBg.setDepth(999),this.debugText.setDepth(999)}update(){this.areDebugStatsActive?(this.debugText.setAlpha(1),this.debugBg.setAlpha(.5)):(this.debugText.setAlpha(0),this.debugBg.setAlpha(0));const e=this.scene.mainScene.input.activePointer;this.debugText.setText(["mouse x: "+e.x,"mouse y: "+e.y,"angle: "+this.scene.mainScene.player.sprite.angle,"player x: "+this.scene.mainScene.player.x,"player y: "+this.scene.mainScene.player.y,"projectile count: "+this.scene.mainScene.projectiles.length,"enemy count: "+this.scene.mainScene.aliveEnemies,"gamestate: main game loop"])}}class x extends e.Scene{constructor(){super({key:"UIScene",active:!0}),this.drawHealth=()=>{const e=this.mainScene.player.health;this.healthText.text=`Vida: ${e}`},this.drawScore=()=>{const e=this.mainScene.player.score;this.scoreText.text=`Pontuação: ${e}`},this.drawRound=()=>{const e=this.mainScene.round;this.roundText.text=`Round ${e}`},this.drawDeathText=()=>{if(this.mainScene.player&&!this.mainScene.player.isAlive&&!this.hasDrawnDeathText){this.hasDrawnDeathText=!0,this.mainScene.stopMusic();const e=this.add.rectangle(0,0,this.screenWidth,this.screenHeight,0).setAlpha(0).setScale(2),t=this.add.text(this.screenWidth/2,this.screenHeight/2,"PERDEU",{fontSize:"10rem",color:"red",fontStyle:"bold"}).setOrigin(.5).setAlpha(0);this.add.text(this.screenWidth/2,this.screenHeight/2+this.screenHeight/8,"Seus resultados foram salvos.",{fontSize:"2rem",fontStyle:"bold"}).setOrigin(.5).setAlpha(0);const s=this.add.text(this.screenWidth/2,this.screenHeight/2+this.screenHeight/6,"Pressione Ctrl+R para tentar de novo",{fontSize:"2rem",fontStyle:"bold"}).setOrigin(.5).setAlpha(0);setTimeout((()=>{this.tweens.add({targets:[t],alpha:1,duration:2e3})}),1e3),setTimeout((()=>{this.tweens.add({targets:[s],alpha:1,duration:2e3})}),2e3),this.tweens.add({targets:[e],alpha:.8,duration:600})}},this.hasDrawnDeathText=!1}preload(){}create(){const{width:e,height:t}=this.sys.game.canvas;this.screenHeight=t,this.screenWidth=e,this.healthText=this.add.text(this.screenWidth/20,this.screenHeight-this.screenHeight/10,"Vida:",{fontSize:"3rem"}),this.scoreText=this.add.text(this.screenWidth-this.screenWidth/4,this.screenHeight/3,"Pontuação: ",{fontSize:"2rem"}),this.roundText=this.add.text(this.screenWidth-this.screenWidth/6,this.screenHeight-this.screenHeight/10,"Round",{fontSize:"3rem"}),this.mainScene=this.scene.get("GameScene"),this.debugMenu=new S(this)}update(){this.mainScene.scene.isActive()&&(this.debugMenu.update(),this.drawHealth(),this.drawScore(),this.drawRound(),this.drawDeathText())}}class A extends Phaser.GameObjects.GameObject{constructor(e,t,s,i,a,r){super(e,"container"),this.x=t,this.y=s,this.background=this.scene.add.rectangle(t,s,250,400,206405),this.upgradeData=r,this.title=this.scene.add.text(t,s-150,i,{fontSize:"2rem",wordWrap:{width:240},align:"center"}).setOrigin(.5),this.description=this.scene.add.text(t,s-30,a,{fontSize:"1.5rem",wordWrap:{width:240},align:"center"}).setOrigin(.5),this.currentUpgradeLevelText=this.scene.add.text(t,s+50,`${this.upgradeData.currentLevel}/${this.upgradeData.maxLevel}`,{fontSize:"3rem",wordWrap:{width:240},align:"center"}).setOrigin(.5),this.priceText=this.scene.add.text(t,s+100,`Preço: ${this.upgradeData.prices[this.upgradeData.currentLevel]}`,{fontSize:"1.2rem",wordWrap:{width:240},align:"center"}).setOrigin(.5),this.upgradeButton=this.scene.add.rectangle(t,s+150,230,50,481439,1).setInteractive().on("pointerup",(()=>{this.upgradeData.handleIncrease(e.player),this.updateTexts()})),this.upgradeText=this.scene.add.text(t,s+150,"UPGRADE",{fontSize:"2rem"}).setOrigin(.5).setInteractive().on("pointerup",(()=>{this.upgradeData.handleIncrease(e.player),this.updateTexts()}))}updateTexts(){this.currentUpgradeLevelText.setText(`${this.upgradeData.currentLevel}/${this.upgradeData.maxLevel}`),this.priceText.setText(`Preço: ${this.upgradeData.prices[this.upgradeData.currentLevel]}`)}setVisibility(e){e?(this.background.setAlpha(1),this.title.setAlpha(1),this.description.setAlpha(1),this.upgradeText.setAlpha(1),this.upgradeButton.setAlpha(1),this.currentUpgradeLevelText.setAlpha(1),this.priceText.setAlpha(1)):(this.background.setAlpha(0),this.title.setAlpha(0),this.description.setAlpha(0),this.upgradeText.setAlpha(0),this.upgradeButton.setAlpha(0),this.currentUpgradeLevelText.setAlpha(0),this.priceText.setAlpha(0)),(()=>{this.upgradeData.isEnabled||(this.upgradeButton.setAlpha(0).removeInteractive(),this.upgradeText.setText("Desabilitado"))})()}create(){}}class k extends e.Scene{constructor(){super({key:"UpgradeScene",active:!0}),this.upgradeItems=[],this.X_MARGIN=0,this.Y_MARGIN=0}preload(){this.load.image("background","assets/debugTiles.jpeg"),this.load.image("logo","assets/phaser3-logo.png"),this.load.audio("porkgrind",["assets/sfx/porkgrind.ogg"])}create(){this.backgroundMusic=this.sound.add("porkgrind");const{width:e,height:t}=this.sys.game.canvas;this.X_MARGIN=e/5,this.Y_MARGIN=t/3,this.bg=this.add.rectangle(0,0,e,t,0,-1).setAlpha(0).setDepth(-999),this.bg.scale=2,this.title=this.add.text(e/2,t/10,"UPGRADES",{fontSize:"3rem"}).setDepth(999).setAlpha(0).setOrigin(.5),this.mainScene=this.scene.get("GameScene"),this.player=this.mainScene.player,this.input.keyboard.on("keydown-TAB",(()=>{var e,t,s;if(!(null==(e=this.mainScene)?void 0:e.isPaused)&&this.player.isAlive)return this.mainScene.isUpgrading?(this.mainScene.isUpgrading=!1,null==(s=this.mainScene)||s.resumeMusic(),this.stopMusic(),this.scene.resume("GameScene")):(this.mainScene.isUpgrading=!0,null==(t=this.mainScene)||t.pauseMusic(),this.playMusic(),this.scene.pause("GameScene"))})),setTimeout((()=>{this.player=this.mainScene.player,this.createMenuItems()}),2e3)}stopMusic(){this.backgroundMusic.stop()}pauseMusic(){this.backgroundMusic.pause()}resumeMusic(){this.backgroundMusic.resume()}playMusic(){this.backgroundMusic.play()}createMenuItems(){this.upgradeItems=c.map(((e,t)=>new A(this,this.X_MARGIN+t%4*300,this.Y_MARGIN+500*Math.floor(t/4),e.title,e.description,this.player.getUpgradeParamById(e.id))))}checkAlpha(){var e;(null==(e=this.mainScene)?void 0:e.isUpgrading)?(this.title.setAlpha(1),this.bg.setAlpha(.2),this.upgradeItems.map((e=>e.setVisibility(!0)))):(this.bg.setAlpha(0),this.title.setAlpha(0),this.upgradeItems.map((e=>e.setVisibility(!1))))}update(){this.checkAlpha()}}class w extends e.Scene{constructor(){super({key:"PauseScene",active:!0})}preload(){this.load.image("background","assets/debugTiles.jpeg"),this.load.image("logo","assets/phaser3-logo.png")}create(){const{width:e,height:t}=this.sys.game.canvas;this.bg=this.add.rectangle(0,0,e,t,0,1).setAlpha(0).setDepth(-999),this.bg.scale=2,this.text=this.add.text(e/2,t/2,"PAUSADO",{fontSize:"3rem"}).setOrigin(.5).setAlpha(0).setDepth(0),this.mainScene=this.scene.get("GameScene"),this.input.keyboard.on("keydown-ESC",(()=>{var e,t,s;if(!(null==(e=this.mainScene)?void 0:e.isUpgrading))return this.mainScene.isPaused?(this.mainScene.isPaused=!1,null==(s=this.mainScene)||s.resumeMusic(),this.scene.resume("GameScene")):(this.mainScene.isPaused=!0,null==(t=this.mainScene)||t.pauseMusic(),this.scene.pause("GameScene"))}))}checkBackgroundAlpha(){var e;(null==(e=this.mainScene)?void 0:e.isPaused)?(this.bg.setAlpha(.8),this.text.setAlpha(1)):(this.bg.setAlpha(0),this.text.setAlpha(0))}update(){this.checkBackgroundAlpha()}}new e.Game(Object.assign(a,{scene:[v,x,k,w]}));
